# frozen_string_literal: true

require 'rails_helper'

RSpec.describe Address, type: :model do
  subject { build(:address) }

  describe 'validations' do
    it { is_expected.to validate_presence_of(:line1) }
    it { is_expected.to validate_presence_of(:city) }
    it { is_expected.to validate_presence_of(:state) }
    it { is_expected.to validate_presence_of(:country) }
    it { is_expected.to validate_presence_of(:zip_code) }

    describe 'zip_code' do
      it { is_expected.to allow_value('12345').for(:zip_code) }
      it { is_expected.to allow_value('12345-1234').for(:zip_code) }
      it { is_expected.not_to allow_value('1234').for(:zip_code) }
      it { is_expected.not_to allow_value('12345-123').for(:zip_code) }
      it { is_expected.not_to allow_value('12345-12345').for(:zip_code) }
    end
  end

  describe 'associations' do
    it { is_expected.to belong_to(:addressable) }
  end

  describe 'normalizations' do
    describe 'line1' do
      it 'normalizes the value' do
        subject.line1 = '  123  Main  St.  '
        subject.valid?
        expect(subject.line1).to eq('123 Main St.')
      end
    end

    describe 'line2' do
      it 'normalizes the value' do
        subject.line2 = '  Apt.  1  '
        subject.valid?
        expect(subject.line2).to eq('Apt. 1')
      end
    end

    describe 'city' do
      it 'normalizes the value' do
        subject.city = '  San  Francisco  '
        subject.valid?
        expect(subject.city).to eq('San Francisco')
      end
    end

    describe 'state' do
      it 'normalizes the value' do
        subject.state = '  California  '
        subject.valid?
        expect(subject.state).to eq('California')
      end
    end

    describe 'country' do
      it 'normalizes the value' do
        subject.country = '  United  States  '
        subject.valid?
        expect(subject.country).to eq('United States')
      end
    end
  end
end
